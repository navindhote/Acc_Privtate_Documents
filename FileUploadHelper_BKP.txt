package com.api.vehicle.bootrestvehicle.helper;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.api.vehicle.bootrestvehicle.entities.Make;
import com.api.vehicle.bootrestvehicle.entities.Model;
import com.api.vehicle.bootrestvehicle.entities.SubModel;
import com.api.vehicle.bootrestvehicle.entities.Type;
import com.api.vehicle.bootrestvehicle.entities.VehicleCode;
import com.api.vehicle.bootrestvehicle.repo.MakeRepository;
import com.api.vehicle.bootrestvehicle.repo.ModelRepository;
import com.api.vehicle.bootrestvehicle.repo.SubModelRepository;
import com.api.vehicle.bootrestvehicle.repo.TypeRepository;
import com.api.vehicle.bootrestvehicle.repo.VehicleCodeRepository;

@Component
public class FileUploadHelper {

	@Autowired
	private TypeRepository typeRepository;
	

	@Autowired
	private MakeRepository makeRepository;
	
	@Autowired
	private ModelRepository modelRepository;
	
	
	@Autowired
	private SubModelRepository subModelRepository;
	
	@Autowired
	private VehicleCodeRepository vehicleCodeRepository;

	public final String UPLOAD_DIR = Paths.get("src/main/resources/vehicle").toAbsolutePath().toString();

	public FileUploadHelper() throws IOException {

	}

	public boolean UploadFile(MultipartFile multiPartFile) {

		boolean f = false;

		try {

			BufferedReader br;

			try {

				String line;
				InputStream is = multiPartFile.getInputStream();
				br = new BufferedReader(new InputStreamReader(is));

		          Type vehicle = new Type();
		          Make make = new Make();
		          Model model = new Model();
		          SubModel subModel = new SubModel();
		          VehicleCode vehicleCode = new VehicleCode();
				
				while ((line = br.readLine()) != null) {

			          // split by a comma separator
			          String[] split = line.split(";");
			          System.out.println("\nLength : " + split.length);
			          System.out.println("split[0] : " + split[0]);
			          
			          vehicleCode.setVehicle_code(split[0]);
			          vehicleCodeRepository.save(vehicleCode);
			          
			          vehicle.setVehicle_type_code(split[0].substring(0, 2));
			          make.setMake_type_code(split[0].substring(2, 5));
			          model.setModel_type_code(split[0].substring(5, 8));
			          subModel.setSubmodel_type_code(split[0].substring(8, 11));
			          
			          System.out.println("split[1] : " + split[1]);
			          
			          vehicle.setVehicle_type(split[1]);
			          
			          System.out.println("split[2] : " + split[2]);
			          
			          make.setMaker_company_name(split[2]);
			          
			          System.out.println("split[3] : " + split[3]);
			          
			          model.setModel_name(split[3]);
			          
			          System.out.println("split[4] : " + split[4]);
			          
			          subModel.setSubmodel_name(split[4]);
			          
			          
			          typeRepository.save(vehicle);
			          modelRepository.save(model);
			          makeRepository.save(make);
			          subModelRepository.save(subModel);
			          
			          //
			          
			          
			      }
				
				// br.lines().skip(1).map(vehicleRepository.save(null)).collect(Collectors.toList());
				
			} catch (IOException e) {
				System.err.println(e.getMessage());
			}

			Files.copy(multiPartFile.getInputStream(),
					Paths.get(UPLOAD_DIR + File.separator + multiPartFile.getOriginalFilename()),
					StandardCopyOption.REPLACE_EXISTING);
			f = true;

		} catch (Exception e) {
			e.printStackTrace();
		}

		return f;
	}

}
